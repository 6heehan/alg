#include <cstdio>
#include <queue>

using namespace std;

char map[50][50] = { 0, };
int check[50][50] = { 0, };
int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };
int goalX;
int goalY;
int h, w;
queue<pair<int, int>> q;
queue<pair<int, int>> water;
int main() {
	scanf("%d %d", &h, &w);
	getchar();
	for (int i = 0;i < h;i++) {
		for (int j = 0;j < w;j++) {
			scanf("%c", &map[i][j]);
			if (map[i][j] == 'S') {
				q.push(make_pair(i, j));
				map[i][j] = '.';
			}
				
			else if (map[i][j] == 'D') {
				goalX = j;
				goalY = i;
			}
		}
		getchar();
	}

	while (!q.empty()) {
		int x, y;
		int size = q.size();
		for (int i = 0;i < h;i++) {
			for (int j = 0;j < w;j++) {
				if (map[i][j] == '*') {
					water.push(make_pair(i, j));
				}
			}
		}
		while (!water.empty()) {
			int waterX = water.front().second;
			int waterY = water.front().first;
			water.pop();
			for (int k = 0;k < 4;k++) {
				int nextX = waterX + dx[k];
				int nextY = waterY + dy[k];

				if (nextX >= 0 && nextX < w && nextY < h && nextY >= 0) {
					if (map[nextY][nextX] == '.')
						map[nextY][nextX] = '*';
				}
			}
		}
		while (size > 0) {
			y = q.front().first;
			x = q.front().second;
			//check[y][x] = 1;
			q.pop();
			
				for (int i = 0;i < 4;i++) {
					int nextX = x + dx[i];
					int nextY = y + dy[i];

					if (nextX >= 0 && nextX < w && nextY < h && nextY >= 0) {
						if (map[nextY][nextX] == '.' && check[nextY][nextX] == 0) {
							q.push(make_pair(nextY, nextX));
							check[nextY][nextX] = check[y][x] + 1;
						}
						if (map[nextY][nextX] == 'D' && check[nextY][nextX] == 0) {
							check[nextY][nextX] = check[y][x] + 1;
						}

					}
				}
			
					
			size--;
		}

	}
	if (check[goalY][goalX] != 0)
		printf("%d\n", check[goalY][goalX]);
	else
		printf("KAKTUS\n");
	
	return 0;
}
