#include <cstdio>
#include <stack>
#include <cstring>
#include <algorithm>
using namespace std;

int n;
int map[25][25];
bool check[25][25];
int total_cnt = 0;
stack<pair<int, int>> s;
void init() {
	for (int i = 0;i < 25;i++) {
		for (int j = 0;j < 25;j++) {
			map[i][j] = 0;
			check[i][j] = false;
		}
	}
}
int dfs(int x, int y) {
	int cnt = 0;
	total_cnt++;
		s.push(make_pair(x, y));
		cnt++;
		check[x][y] = true;
		while (!s.empty()) {
			int a, b;
			a = s.top().first;
			b = s.top().second;
			s.pop();
			if (a+ 1 < n) {
				if (check[a + 1][b] == false && map[a + 1][b] == 1) {
					s.push(make_pair(a + 1, b));
					check[a + 1][b] = true;
					cnt++;
				}
			}
			if (a - 1 >= 0) {
				if (check[a - 1][b] == false && map[a - 1][b] == 1) {
					s.push(make_pair(a - 1, b));
					check[a - 1][b] = true;
					cnt++;
				}
			}
			if (b + 1 < n) {
				if (check[a][b + 1] == false && map[a][b + 1] == 1) {
					s.push(make_pair(a, b + 1));
					check[a][b + 1] = true;
					cnt++;
				}
			}
			if (b - 1 >= 0) {
				if (check[a][b - 1] == false && map[a][b - 1] == 1) {
					s.push(make_pair(a, b - 1));
					check[a][b - 1] = true;
					cnt++;
				}
			}
		}
		return cnt;
}
int main() {
	int res[313] = {0,};
	int res_len = 0;
	scanf("%d", &n);
    init();
	for (int i = 0;i < n;i++) {
		for (int j = 0;j < n;j++) {
			scanf("%1d", &map[i][j]);
		}
	}

	for (int i = 0;i < n;i++) {
		for (int j = 0;j < n;j++) {
			if (map[i][j] == 1 && check[i][j] == false) {
				int temp = dfs(i, j);
				if (temp != 0) {
					res[res_len++] = temp;
				}
			}
		}
	}
	printf("%d\n", total_cnt);
	sort(res, res + res_len );
	for (int i = 0;i < res_len;i++) {
		printf("%d\n", res[i]);
	}

	return 0;
}
